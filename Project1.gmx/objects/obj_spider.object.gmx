<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spider_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
 hp=global.spider_hp ; // hit points
 immune = 0; // if the enemy can be hit or not
 immune_time = 0; // how much time the enemy is immune
 jump_timer = global.spider_jump_timer; // the spider will jump from time to time , and this timer is used for jump patterns
 damage_timer = global.spider_damage_timer; // a timer used to determine how many times can the spider hit the player 
 is_jumping = 0; // true or false , depending if the spider is jumping or not
 destination_x = 0; // destination coordinate x of the jump
 destination_y = 0; // destination coordinate y of the jump
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_find_depth</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_dmg</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if (hp&lt;=0)
     instance_destroy();

    if (damage_timer&lt;global.spider_damage_timer) // damage timer incrementation
    damage_timer++;
    
    if (jump_timer&lt;global.spider_jump_timer &amp;&amp; is_jumping==0) // jump timer incrementation
    jump_timer++;

    if(instance_exists(obj_player)) // if the player is alive
    {  
      if (is_jumping==0 &amp;&amp; jump_timer&lt;global.spider_jump_timer) // if the spider is not jumping and cannot jump, he will slowly follow the player
      { 
        if(distance_to_point(obj_player.x,obj_player.y) &lt;= global.spider_sight_range &amp;&amp; !collision_line(x,y,obj_player.x,obj_player.y,obj_wall,false,true)) // and there is no wall between the player and the spider
        {
            friction = 0;
            motion_add(point_direction(x,y,obj_player.x,obj_player.y),global.spider_walk_speed);
            if(speed &gt;=global.spider_walk_speed) speed = global.spider_walk_speed;
        }
        else 
        {
            friction = 1;
        }
      }
      
      if (is_jumping==0 &amp;&amp; jump_timer&gt;=global.spider_jump_timer) // if the spider is not jumping and can jump ...
      {
          if (distance_to_point(obj_player.x,obj_player.y) &gt; global.spider_sight_range) // if the spider is not near the player , he will just jump in a random direction
          {
             destination_x=x+random_range(-75,75);
             destination_y=y+random_range(-75,75);
             if (place_free(destination_x,destination_y) &amp;&amp; !collision_line(x,y,destination_x,destination_y,obj_wall,false,true) /*&amp;&amp; destination_x&lt;room_width-10 &amp;&amp; destination_y&lt;room_height-10 &amp;&amp; destiantion_x&gt;10 &amp;&amp; destination_y&gt;10*/) // verifies if the randomised destinations can be reached
             { 
               is_jumping=1;
               jump_timer=0;
             }
          }
          else // if the spider can jump to the player
          {
             destination_x=obj_player.x;
             destination_y=obj_player.y;
             if (place_free(destination_x,destination_y) &amp;&amp; !collision_line(x,y,destination_x,destination_y,obj_wall,false,true) /*&amp;&amp; destination_x&lt;room_width-10 &amp;&amp; destination_y&lt;room_height-10 &amp;&amp; destiantion_x&gt;10 &amp;&amp; destination_y&gt;10*/) // verifies if the player destinations can be reached
             { 
               is_jumping=1;
               jump_timer=0;
             }
          }
      }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{ // this piece of code is only for the jumping phase
   if(instance_exists(obj_player)) // if the player is alive
   {
    if (is_jumping==1 &amp;&amp; x!=destination_x &amp;&amp; y!=destination_y) // if the spider hasn't reached his destination yet , he will keep going
     {
        friction = 0;
        motion_add(point_direction(x,y,destination_x,destination_y),global.spider_jump_speed);
        if(speed &gt;=global.spider_jump_speed) speed = global.spider_jump_speed;
     } 
    
    if (is_jumping==1 &amp;&amp; x&gt;=destination_x-10 &amp;&amp; y&gt;=destination_y-10 &amp;&amp; x&lt;=destination_x+10 &amp;&amp; y&lt;=destination_y+10)
     {
       is_jumping=0;
       friction=1;
     }
    if (is_jumping==1 &amp;&amp; place_meeting(x,y,obj_repel))
     {
       is_jumping=0;
     }
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_repel</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{// animation script
  if (is_jumping==0 &amp;&amp; sprite_index!=spr_spider_idle)
    sprite_index=spr_spider_idle;
  if (is_jumping==1 &amp;&amp; sprite_index!=spr_spider_jumping) // if the spider is jumping , set it to the according animation
  {
    sprite_index=spr_spider_jumping;
    image_speed=0.5;
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
 if (distance_to_point(obj_player.x,obj_player.y) &lt;= global.spider_sight_range &amp;&amp; collision_line(x,y,obj_player.x,obj_player.y,obj_wall,false,true) &amp;&amp; is_jumping==1)
   is_jumping=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    move_bounce_solid(true);
    if(speed &gt; 2) speed = speed/2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wave">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
  is_jumping=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
  if (damage_timer&gt;=global.spider_damage_timer)
  {
    global.hp-=global.spider_damage; // if the spider hits the player and didn't hit the player a second before , the player will take damage
    damage_timer=0; // reset the damage timer
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
